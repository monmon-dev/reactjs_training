install: npm, yarn
url: https://indecision.mead.io/; https://github.com/andrewjmead/react-course-2-indecision-app
install: 
npm install -g live-server 
npm install -g babel-cli@6.24.1
yarn add babel-preset-react@6.24.1 babel-preset-env@1.5.2

run: 
babel src/app.js --out-file=public/scripts/app.js --presets=env,react
babel src/app.js --out-file=public/scripts/app.js --presets=env,react --watch

!notes in running if re-open:
first terminal: live-server public
second terminal: babel src/app.js --out-file=public/scripts/app.js --presets=env,react --watch
chill song: https://www.youtube.com/watch?v=FnLBnShJpUY
          : https://www.youtube.com/watch?v=Y423D-GpX2I
          
babel src/playground/es6-let-const.js --out-file=public/scripts/app.js --presets=env,react --watch
babel src/playground/es6-arrow-function.js --out-file=public/scripts/app.js --presets=env,react --watch
babel src/playground/es6-arrow-function-2.js --out-file=public/scripts/app.js --presets=env,react --watch
babel src/playground/build-it-visible.js --out-file=public/scripts/app.js --presets=env,react --watch
babel src/playground/es6-classes-1.js --out-file=public/scripts/app.js --presets=env,react --watch
babel src/playground/jsx-indecision.js --out-file=public/scripts/app.js --presets=env,react --watch
babel src/playground/counter-example.js --out-file=public/scripts/app.js --presets=env,react --watch
babel src/app.js --out-file=public/scripts/app.js --presets=env,react --watch
babel src/app.js --out-file=public/scripts/app.js --presets=env,react --watch


React components (Indecision App)
<IndecisionApp />   ...this is going to be the Parent components
    <Header />          ...this is going to be the Child components
    <Actiom />          ...this is going to be the Child components
    <Options />         ...this is going to be the Child components
        <Option />          ...this is going to be the Child of <Options /> components
    <AddOption />       ...this is going to be the Child components

Constructor function is the function that gets called 
when we make a new instance and it gets called 
with all of the arguments we pass in.

we never want to manipulate the state or the previous state, instead we want to go ahead and
just compute the new one. so, instead of using push, we're going to use the array concat method
the array concat method is going to allow us to merge the values from this array with something
new without affecting this array. so, it's not going to change that stuff

Array.prototype.concat()
The concat() method is used to merge two or more arrays
This method does not change the existing arrays, but instead returns a new array
Example:
var arr1 = ['a', 'b', 'c']
var arr2 = ['d','e','f',]
var arr3 = arr1.concat(arr2); //['a','b','c','d','e','f']

if (this.state.options.indexOf(option) > -1) //this code means it has a matched/same data




